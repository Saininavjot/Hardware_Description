----------------------------------------------------------------------------------
-- Create Date:    05:53:05 10/02/2019 
-- Module Name:    full_adder - Behavioral 
-- Revision 0.01 - File Created
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM
--use UNISIM.VComponents.all;

entity full_adder is
    Port ( A : in  STD_LOGIC;
           B : in  STD_LOGIC;
           Cin : in  STD_LOGIC;
           Sum : out  STD_LOGIC;
           Cout : out  STD_LOGIC);
end full_adder;

architecture Behavioral of full_adder is

begin
Sum <= A xor B xor Cin;
Cout <= (A and B) or ((A xor B) and Cin);

end Behavioral;

--------------------------------------------------------------------------------
-- Create Date:   05:57:22 10/02/2019
-- Module Name:   /home/ise/Xilinx_Dir/full_adder/fulladder_testbench.vhd
-- Project Name:  full_adder
-- VHDL Test Bench Created by ISE for module: full_adder
-- Revision:
-- Revision 0.01 - File Created
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY fulladder_testbench IS
END fulladder_testbench;
 
ARCHITECTURE behavior OF fulladder_testbench IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT full_adder
    PORT(
         A : IN  std_logic;
         B : IN  std_logic;
         Cin : IN  std_logic;
         Sum : OUT  std_logic;
         Cout : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic := '0';
   signal B : std_logic := '0';
   signal Cin : std_logic := '0';

 	--Outputs
   signal Sum : std_logic;
   signal Cout : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
   --constant <clock>_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: full_adder PORT MAP (
          A => A,
          B => B,
          Cin => Cin,
          Sum => Sum,
          Cout => Cout
        );

   -- Clock process definitions
--   <clock>_process :process
--   begin
--		<clock> <= '0';
--		wait for <clock>_period/2;
--		<clock> <= '1';
--		wait for <clock>_period/2;
--   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 30 ns;	
 A<='0';
 B<='0';
 Cin<='0';
 wait for 30 ns;
 A<='0';
 B<='0';
 Cin<='1';
 wait for 30 ns;
  A<='0';
 B<='1';
 Cin<='0';
 wait for 30 ns;
  A<='0';
 B<='1';
 Cin<='1';
 wait for 30 ns;
  A<='1';
 B<='0';
 Cin<='0';
 wait for 30 ns;
  A<='1';
 B<='0';
 Cin<='1';
 wait for 30 ns;
  A<='1';
 B<='1';
 Cin<='0';
 wait for 30 ns;
  A<='1';
 B<='1';
 Cin<='1';
 wait for 30 ns;

      --wait for <clock>_period*10;

      -- insert stimulus here 

      --wait;
   end process;

END;
